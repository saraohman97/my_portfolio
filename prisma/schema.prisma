generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expired_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  text        String
  favorite    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  NextJS    Boolean
  ReactJS   Boolean
  VanillaJS Boolean

  MongoDB Boolean
  MySQL   Boolean

  Prisma   Boolean
  Mongoose Boolean

  Tailwind   Boolean
  Shadcn     Boolean
  VanillaCSS Boolean

  images Image[]
}

model Project {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  images ProjectImage[]
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Image {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  url    String
  postId String @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([postId])
}

model ProjectImage {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  projectId String  @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
}
